{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\documents\\\\NextJS\\\\Next-js-proj\\\\pages\\\\[meetupid]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\nimport { MongoClient } from \"mongodb\";\nexport async function getStaticPaths() {\n  return {\n    paths: [],\n    fallback: true\n  };\n}\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://chm:12345@cluster0.lgemeim.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupid = router.query.meetupid;\n  const meetup = await meetupsCollection.findOne({\n    _id: meetupid\n  });\n  console.log(meetup);\n  client.close();\n  return {\n    props: {\n      meetup: {\n        title: meetup.title,\n        id: meetup._id.toString(),\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n      }\n    },\n    revalidate: 5\n  };\n}\nexport default function MeetUp(props) {\n  // console.log(meetup);\n  return /*#__PURE__*/_jsxDEV(MeetUpDetails, {\n    id: props.meetup.id,\n    image: props.meetup.image,\n    title: props.meetup.title,\n    address: props.meetup.address,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}","map":{"version":3,"sources":["D:/documents/NextJS/Next-js-proj/pages/[meetupid]/index.js"],"names":["useRouter","MeetUpDetails","MongoClient","getStaticPaths","paths","fallback","getStaticProps","client","connect","db","meetupsCollection","collection","meetupid","router","query","meetup","findOne","_id","console","log","close","props","title","id","toString","address","image","description","revalidate","MeetUp"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAO,eAAeC,cAAf,GAA+B;AAClC,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,0FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,KAAP,CAAaF,QAA9B;AACA,QAAMG,MAAM,GAAG,MAAML,iBAAiB,CAACM,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAAEL;AAAN,GAA1B,CAArB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAR,EAAAA,MAAM,CAACa,KAAP;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLN,MAAAA,MAAM,EAAG;AACLO,QAAAA,KAAK,EAAEP,MAAM,CAACO,KADT;AAELC,QAAAA,EAAE,EAAER,MAAM,CAACE,GAAP,CAAWO,QAAX,EAFC;AAGLC,QAAAA,OAAO,EAAEV,MAAM,CAACU,OAHX;AAILC,QAAAA,KAAK,EAAEX,MAAM,CAACW,KAJT;AAKLC,QAAAA,WAAW,EAAEZ,MAAM,CAACY;AALf;AADJ,KADF;AAWLC,IAAAA,UAAU,EAAE;AAXP,GAAP;AAaD;AAGD,eAAe,SAASC,MAAT,CAAgBR,KAAhB,EAAsB;AAGjC;AACA,sBAAQ,QAAC,aAAD;AAAe,IAAA,EAAE,EAAEA,KAAK,CAACN,MAAN,CAAaQ,EAAhC;AAAoC,IAAA,KAAK,EAAEF,KAAK,CAACN,MAAN,CAAaW,KAAxD;AAA+D,IAAA,KAAK,EAAEL,KAAK,CAACN,MAAN,CAAaO,KAAnF;AAA0F,IAAA,OAAO,EAAED,KAAK,CAACN,MAAN,CAAaU,OAAhH;AAAyH,IAAA,WAAW,EAAEJ,KAAK,CAACN,MAAN,CAAaY;AAAnJ;AAAA;AAAA;AAAA;AAAA,UAAR;AACH","sourcesContent":["import { useRouter } from \"next/router\"\r\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\r\n\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nexport async function getStaticPaths(){\r\n    return {\r\n        paths: [],\r\n        fallback: true\r\n    }\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect('mongodb+srv://chm:12345@cluster0.lgemeim.mongodb.net/meetups?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  \r\n  const meetupid = router.query.meetupid;\r\n  const meetup = await meetupsCollection.findOne({_id: meetupid});\r\n  console.log(meetup);\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetup:  {\r\n          title: meetup.title,\r\n          id: meetup._id.toString(),\r\n          address: meetup.address,\r\n          image: meetup.image,\r\n          description: meetup.description\r\n        }\r\n      \r\n    },\r\n    revalidate: 5\r\n  };\r\n}\r\n\r\n\r\nexport default function MeetUp(props){\r\n    \r\n    \r\n    // console.log(meetup);\r\n    return  <MeetUpDetails id={props.meetup.id} image={props.meetup.image} title={props.meetup.title} address={props.meetup.address} description={props.meetup.description}/>\r\n}"]},"metadata":{},"sourceType":"module"}