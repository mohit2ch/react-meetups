{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\documents\\\\NextJS\\\\Next-js-proj\\\\pages\\\\[meetupid]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\nexport var __N_SSG = true;\nexport default function MeetUp(props) {\n  var meetup = props.meetup;\n  if (meetup === undefined) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Not Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 37\n  }, this); // console.log(meetup);\n\n  return /*#__PURE__*/_jsxDEV(MeetUpDetails, {\n    id: meetup.id,\n    image: meetup.image,\n    title: meetup.title,\n    address: meetup.address,\n    description: meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n}\n_c = MeetUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUp\");","map":{"version":3,"sources":["D:/documents/NextJS/Next-js-proj/pages/[meetupid]/index.js"],"names":["useRouter","MeetUpDetails","MeetUp","props","meetup","undefined","id","image","title","address","description"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AA8CA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAGjC,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,MAAGA,MAAM,KAAKC,SAAd,EAAyB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAJQ,CAKjC;;AACA,sBAAQ,QAAC,aAAD;AAAe,IAAA,EAAE,EAAED,MAAM,CAACE,EAA1B;AAA8B,IAAA,KAAK,EAAEF,MAAM,CAACG,KAA5C;AAAmD,IAAA,KAAK,EAAEH,MAAM,CAACI,KAAjE;AAAwE,IAAA,OAAO,EAAEJ,MAAM,CAACK,OAAxF;AAAiG,IAAA,WAAW,EAAEL,MAAM,CAACM;AAArH;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;KAPuBR,M","sourcesContent":["import { useRouter } from \"next/router\"\r\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\r\n\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://chm:12345@cluster0.lgemeim.mongodb.net/meetups?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  console.log(meetups);\r\n  client.close();\r\n    return {\r\n        paths: \r\n            meetups.map((meetup)=>{\r\n                params: {meetupid: meetup._id.toString()}\r\n            })\r\n        ,\r\n        fallback: false\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n   \r\n  const client = await MongoClient.connect('mongodb+srv://chm:12345@cluster0.lgemeim.mongodb.net/meetups?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetupid = context.params.meetupid;\r\n  const meetup = await meetupsCollection.findOne({_id: ObjectId(meetupid)});\r\n  console.log(meetup);\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetup:  {\r\n          title: meetup.title,\r\n          id: meetup._id.toString(),\r\n          address: meetup.address,\r\n          image: meetup.image,\r\n          description: meetup.description\r\n        }\r\n      \r\n    },\r\n    revalidate: 5\r\n  };\r\n}\r\n\r\n\r\nexport default function MeetUp(props){\r\n    \r\n    \r\n    const meetup = props.meetup;\r\n    if(meetup === undefined) return <h2>Not Found</h2>\r\n    // console.log(meetup);\r\n    return  <MeetUpDetails id={meetup.id} image={meetup.image} title={meetup.title} address={meetup.address} description={meetup.description}/>\r\n}"]},"metadata":{},"sourceType":"module"}