{"ast":null,"code":"import _regeneratorRuntime from \"D:/documents/NextJS/Next-js-proj/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"D:/documents/NextJS/Next-js-proj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\documents\\\\NextJS\\\\Next-js-proj\\\\pages\\\\new-meetup\\\\index.js\";\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\nexport default function NewMeetUp(props) {\n  function addMeetUpHandler(_x) {\n    return _addMeetUpHandler.apply(this, arguments);\n  }\n\n  function _addMeetUpHandler() {\n    _addMeetUpHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(meetup) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/new-meetup', {\n                method: 'POST',\n                body: JSON.stringify(meetup),\n                headers: {\n                  'Content-type': 'application/json'\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addMeetUpHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetUpHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n_c = NewMeetUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetUp\");","map":{"version":3,"sources":["D:/documents/NextJS/Next-js-proj/pages/new-meetup/index.js"],"names":["NewMeetupForm","NewMeetUp","props","addMeetUpHandler","meetup","fetch","method","body","JSON","stringify","headers","response","json","data","console","log"],"mappings":";;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA,WACrBC,gBADqB;AAAA;AAAA;;AAAA;AAAA,iFACpC,iBAAgCC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC2BC,KAAK,CAAC,iBAAD,EAAmB;AAC3CC,gBAAAA,MAAM,EAAE,MADmC;AAE3CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAFqC;AAG3CM,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX;AAHkC,eAAnB,CADhC;;AAAA;AACUC,cAAAA,QADV;AAAA;AAAA,qBASuBA,QAAQ,CAACC,IAAT,EATvB;;AAAA;AASUC,cAAAA,IATV;AAUIC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADoC;AAAA;AAAA;;AAcpC,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEV;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;KAfuBF,S","sourcesContent":["import NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\r\n\r\nexport default function NewMeetUp(props){\r\n    async function addMeetUpHandler(meetup){\r\n        const response = await fetch('/api/new-meetup',{\r\n            method: 'POST',\r\n            body: JSON.stringify(meetup),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n\r\n    }\r\n    return <NewMeetupForm onAddMeetup={addMeetUpHandler}></NewMeetupForm>\r\n}"]},"metadata":{},"sourceType":"module"}